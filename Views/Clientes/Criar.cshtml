@model ContatoModel
@{
    ViewData["Title"] = "Criar Cliente";
}

<div class="text-center">
    <h1 class="display-6">Cadastrar novo Cliente</h1>
</div>

<form aps-controller="Clientes" asp-action="Criar" method="post">

    <div class="form-group">
        <label for="nomeCliente">Nome do Cliente/Razão Social:</label>
        <input type="text" asp-for="nome" class="form-control" id="nomeCliente" placeholder="Insira o nome completo ou razão social do cliente" required>
    </div>
    <div class="form-group">
        <label for="emailCliente">E-Mail:</label>
        <input type="email" asp-for="email" class="form-control" id="emailCliente" placeholder="Insira o e-mail do cliente" required>
    </div>
    <div class="form-group">
        <label for="telefoneCliente">Telefone:</label>
        <input type="tel" asp-for="telefone" class="form-control" id="telefoneCliente" placeholder="Insira o telefone do cliente (ex: (99) 99999-9999)" maxlength="15" required>
    </div>

    <div class="form-group">
        <label>Data de Cadastro:</label>
        <input type="date" asp-for="dataInscricao" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly>
    </div>
    <div class="form-group">
        <label>Tipo de Pessoa:</label>
        <select class="form-control" id="tipoPessoa" required>
            <option value="">Selecione</option>
            <option value="Fisica">Física</option>
            <option value="Juridica">Jurídica</option>
        </select>
    </div>
    <div class="form-group">
        <label for="cpfCnpjCliente">CPF/CNPJ:</label>
        <input type="text" asp-for="cpfCnpj" class="form-control" id="cpfCnpjCliente" placeholder="Insira o CPF ou CNPJ do cliente" required>
    </div>
    <div class="form-group">
        <label for="inscricaoEstadual">Inscrição Estadual:</label>
        <input type="text" class="form-control" id="inscricaoEstadual" placeholder="Insira a inscrição estadual do cliente" required>
    </div>
    <div class="form-group form-check">
        <input type="checkbox" class="form-check-input" id="isentoInscricao">
        <label class="form-check-label" for="isentoInscricao">Isento</label>
    </div>
    <div id="informacoesPessoais">
        <div class="form-group">
            <label>Gênero:</label>
            <select class="form-control" required>
                <option value="">Selecione</option>
                <option value="Feminino">Feminino</option>
                <option value="Masculino">Masculino</option>
                <option value="Outro">Outro</option>
            </select>
        </div>
        <div class="form-group">
            <label>Data de Nascimento:</label>
            <input type="date" class="form-control" required>
        </div>
    </div>
    <div class="form-group">
        <label>Situação do Cliente:</label>
        <div class="form-check">
            <input type="checkbox" aps-for="bloqueado" class="form-check-input" id="clienteBloqueado">
            <label class="form-check-label" for="clienteBloqueado">Bloqueado</label>
        </div>
    </div>
    <div class="form-group">
        <label for="senhaCliente">Senha de Acesso:</label>
        <input type="password" class="form-control" id="senhaCliente" minlength="8" maxlength="15" required>
    </div>
    <div class="form-group">
        <label for="confirmacaoSenhaCliente">Confirmação de Senha:</label>
        <input type="password" class="form-control" id="confirmacaoSenhaCliente" minlength="8" maxlength="15" required>
        <small id="senhaMismatch" class="form-text text-danger">As senhas não conferem</small>
    </div>

    <button type="submit" class="btn btn-primary">Adicionar</button>
    <a class="btn btn-secondary" asp-controller="Clientes" asp-action="Index" role="button">Voltar</a>
</form>

<script>
    // Máscara para CPF/CNPJ
    const cpfCnpjInput = document.getElementById('cpfCnpjCliente');
    const tipoPessoaSelect = document.getElementById('tipoPessoa');

    tipoPessoaSelect.addEventListener('change', function () {
        cpfCnpjInput.value = '';
        cpfCnpjInput.maxLength = this.value === 'Fisica' ? 14 : 18;
    });

    cpfCnpjInput.addEventListener('input', function () {
        let value = this.value.replace(/\D/g, '');

        if (value.length > 11) {
            value = value.substring(0, 14);
        }

        if (value.length === 11) {
            this.value = value.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
        } else if (value.length === 14) {
            this.value = value.replace(/(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})/, '$1.$2.$3/$4-$5');
        }
    });

    // Máscara para telefone
    const telefoneInput = document.getElementById('telefoneCliente');

    telefoneInput.addEventListener('input', function () {
        const value = this.value.replace(/\D/g, '');
        this.value = value.replace(/(\d{2})(\d{5})(\d{4})/, '($1) $2-$3');
    });

    // Verificar se as senhas conferem em tempo real
    const senhaInput = document.getElementById('senhaCliente');
    const confirmacaoSenhaInput = document.getElementById('confirmacaoSenhaCliente');
    const senhaMismatch = document.getElementById('senhaMismatch');

    senhaInput.addEventListener('input', function () {
        if (senhaInput.value !== confirmacaoSenhaInput.value) {
            senhaMismatch.style.display = 'block';
        } else {
            senhaMismatch.style.display = 'none';
        }
    });

    confirmacaoSenhaInput.addEventListener('input', function () {
        if (senhaInput.value !== confirmacaoSenhaInput.value) {
            senhaMismatch.style.display = 'block';
        } else {
            senhaMismatch.style.display = 'none';
        }
    });
</script>

